package euler;

import java.util.ArrayList;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 * @author weskilgour
 * 
 */
public class Problem_002 {

	public static void main(String[] args) {
		ArrayList<Integer> fib = new ArrayList<Integer>();

		fib.add(0);
		fib.add(1);

		while (fib.get(fib.size() - 1) + fib.get(fib.size() - 2) <= 4000000) {
			fib.add(fib.get(fib.size() - 1) + fib.get(fib.size() - 2));
		}

		int sum = 0;

		for (Integer x : fib) {
			if (x % 2 == 0) {
				sum += x;
			}
		}
		System.out.println(sum);
	}
}
